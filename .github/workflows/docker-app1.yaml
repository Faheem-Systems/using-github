name: Maven Build & Dockerize

# Trigger the workflow on push to main branch or when manually triggered
on:
  push:
    branches: [ main ]  # Trigger on push to main branch
  workflow_dispatch:  # Allows manual triggering of the workflow

jobs:
  build:
    runs-on: ubuntu-latest  # The workflow will run on an Ubuntu-based runner

    steps:
      # Checkout the code from the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Java 17 (Temurin) for Maven builds
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'  # Specifies Java 17
          distribution: 'temurin'  # Use OpenJDK from Adoptium Temurin

      # Build the project using Maven (skipping tests to save time)
      - name: Build with Maven
        run: mvn clean package -DskipTests  # Build the app and skip tests to speed up the process

      # Log in to GitHub Container Registry (GHCR)
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io  # GitHub Container Registry URL
          username: ${{ github.actor }}  # GitHub username of the person triggering the action
          password: ${{ secrets.GITHUB_TOKEN }}  # Use the GitHub token for authentication

      # Build and Push Docker image to GitHub Container Registry (GHCR)
      - name: Build and push Docker image
        run: |
          # Get the repository name (lowercase)
          REPO_LOWER="${{ github.repository }}"  # Fetches the full repository name, e.g., Faheem-Systems/App1
          REPO_LOWER="${REPO_LOWER,,}"  # Converts repository name to lowercase, e.g., faheem-systems/app1

          # Define the image name and tag (latest)
          IMAGE_NAME="ghcr.io/$REPO_LOWER:latest"  # Full image name for GHCR, e.g., ghcr.io/faheem-systems/app1:latest

          # Build the Docker image
          docker build -t $IMAGE_NAME .  # Build the image using the Dockerfile in the repo

          # Push the image to GitHub Container Registry (GHCR)
          docker push $IMAGE_NAME  # Push the image to the GitHub Container Registry
